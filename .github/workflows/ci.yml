name: CI

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build, test, and pack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use dotnet CLI 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x" # SDK Version to use.

      - name: Use dotnet CLI 8
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "8.0.x" # SDK Version to use.

      - name: Set env
        if: startsWith( github.ref, 'refs/tags/v' )
        run: |
          RELEASE_VERSION="${GITHUB_REF#refs/*/}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "Version=${RELEASE_VERSION:1}" >> $GITHUB_ENV

      - name: Build
        run: |
          dotnet restore
          dotnet build -c Release --no-restore

      - name: Test net6.0
        run: dotnet test -c Release --no-restore --no-build --framework net6.0 --logger "GitHubActions;report-warnings=false"

      - name: Test net8.0
        run: dotnet test -c Release --no-restore --no-build --framework net8.0 --logger "GitHubActions;report-warnings=false"

      - name: Pack
        run: dotnet pack -c Release --no-restore --no-build --include-symbols -o out

      - name: Upload Test Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: verify-test-results
          path: |
            **/*.received.*
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./out
      - name: Push
        if: startsWith( github.ref, 'refs/tags/v' )
        env:
          API_KEY: ${{ secrets.NUGET_API_KEY }}
          SOURCE: "https://api.nuget.org/v3/index.json"
        run: |
          dotnet nuget push ./out/*FSharp.Data.JsonSchema.${RELEASE_VERSION:1}.nupkg --skip-duplicate --no-symbols --source $SOURCE --api-key $API_KEY
